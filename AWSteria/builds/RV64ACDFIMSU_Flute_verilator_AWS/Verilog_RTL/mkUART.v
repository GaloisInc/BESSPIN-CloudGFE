//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// RDY_set_addr_map               O     1 const
// slave_awready                  O     1 reg
// slave_wready                   O     1 reg
// slave_bid                      O     7 reg
// slave_bresp                    O     2 reg
// slave_bvalid                   O     1 reg
// slave_arready                  O     1 reg
// slave_rid                      O     7
// slave_rdata                    O    64
// slave_rresp                    O     2
// slave_rlast                    O     1
// slave_ruser                    O     1
// slave_rvalid                   O     1 reg
// get_to_console_get             O     8 reg
// RDY_get_to_console_get         O     1 reg
// RDY_put_from_console_put       O     1 reg
// intr                           O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_addr_map_addr_base         I    64 reg
// set_addr_map_addr_lim          I    64 reg
// slave_awid                     I     7 reg
// slave_awaddr                   I    64 reg
// slave_awlen                    I     8 reg
// slave_awsize                   I     3 reg
// slave_awburst                  I     2 reg
// slave_awlock                   I     1 reg
// slave_awcache                  I     4 reg
// slave_awprot                   I     3 reg
// slave_awqos                    I     4 reg
// slave_awregion                 I     4 reg
// slave_wdata                    I    64 reg
// slave_wstrb                    I     8 reg
// slave_wlast                    I     1 reg
// slave_wuser                    I     1 reg
// slave_bready                   I     1
// slave_arid                     I     7 reg
// slave_araddr                   I    64 reg
// slave_arlen                    I     8 reg
// slave_arsize                   I     3 reg
// slave_arburst                  I     2 reg
// slave_arlock                   I     1 reg
// slave_arcache                  I     4 reg
// slave_arprot                   I     3 reg
// slave_arqos                    I     4 reg
// slave_arregion                 I     4 reg
// slave_rready                   I     1
// put_from_console_put           I     8 reg
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_set_addr_map                I     1
// slave_awvalid                  I     1
// slave_wvalid                   I     1
// slave_arvalid                  I     1
// EN_put_from_console_put        I     1
// EN_get_to_console_get          I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkUART(CLK,
	      RST_N,

	      EN_server_reset_request_put,
	      RDY_server_reset_request_put,

	      EN_server_reset_response_get,
	      RDY_server_reset_response_get,

	      set_addr_map_addr_base,
	      set_addr_map_addr_lim,
	      EN_set_addr_map,
	      RDY_set_addr_map,

	      slave_awid,
	      slave_awaddr,
	      slave_awlen,
	      slave_awsize,
	      slave_awburst,
	      slave_awlock,
	      slave_awcache,
	      slave_awprot,
	      slave_awqos,
	      slave_awregion,
	      slave_awvalid,

	      slave_awready,

	      slave_wdata,
	      slave_wstrb,
	      slave_wlast,
	      slave_wuser,
	      slave_wvalid,

	      slave_wready,

	      slave_bid,

	      slave_bresp,

	      slave_bvalid,

	      slave_bready,

	      slave_arid,
	      slave_araddr,
	      slave_arlen,
	      slave_arsize,
	      slave_arburst,
	      slave_arlock,
	      slave_arcache,
	      slave_arprot,
	      slave_arqos,
	      slave_arregion,
	      slave_arvalid,

	      slave_arready,

	      slave_rid,

	      slave_rdata,

	      slave_rresp,

	      slave_rlast,

	      slave_ruser,

	      slave_rvalid,

	      slave_rready,

	      EN_get_to_console_get,
	      get_to_console_get,
	      RDY_get_to_console_get,

	      put_from_console_put,
	      EN_put_from_console_put,
	      RDY_put_from_console_put,

	      intr);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method set_addr_map
  input  [63 : 0] set_addr_map_addr_base;
  input  [63 : 0] set_addr_map_addr_lim;
  input  EN_set_addr_map;
  output RDY_set_addr_map;

  // action method slave_aw_awflit
  input  [6 : 0] slave_awid;
  input  [63 : 0] slave_awaddr;
  input  [7 : 0] slave_awlen;
  input  [2 : 0] slave_awsize;
  input  [1 : 0] slave_awburst;
  input  slave_awlock;
  input  [3 : 0] slave_awcache;
  input  [2 : 0] slave_awprot;
  input  [3 : 0] slave_awqos;
  input  [3 : 0] slave_awregion;
  input  slave_awvalid;

  // value method slave_aw_awready
  output slave_awready;

  // action method slave_w_wflit
  input  [63 : 0] slave_wdata;
  input  [7 : 0] slave_wstrb;
  input  slave_wlast;
  input  slave_wuser;
  input  slave_wvalid;

  // value method slave_w_wready
  output slave_wready;

  // value method slave_b_bid
  output [6 : 0] slave_bid;

  // value method slave_b_bresp
  output [1 : 0] slave_bresp;

  // value method slave_b_buser

  // value method slave_b_bvalid
  output slave_bvalid;

  // action method slave_b_bready
  input  slave_bready;

  // action method slave_ar_arflit
  input  [6 : 0] slave_arid;
  input  [63 : 0] slave_araddr;
  input  [7 : 0] slave_arlen;
  input  [2 : 0] slave_arsize;
  input  [1 : 0] slave_arburst;
  input  slave_arlock;
  input  [3 : 0] slave_arcache;
  input  [2 : 0] slave_arprot;
  input  [3 : 0] slave_arqos;
  input  [3 : 0] slave_arregion;
  input  slave_arvalid;

  // value method slave_ar_arready
  output slave_arready;

  // value method slave_r_rid
  output [6 : 0] slave_rid;

  // value method slave_r_rdata
  output [63 : 0] slave_rdata;

  // value method slave_r_rresp
  output [1 : 0] slave_rresp;

  // value method slave_r_rlast
  output slave_rlast;

  // value method slave_r_ruser
  output slave_ruser;

  // value method slave_r_rvalid
  output slave_rvalid;

  // action method slave_r_rready
  input  slave_rready;

  // actionvalue method get_to_console_get
  input  EN_get_to_console_get;
  output [7 : 0] get_to_console_get;
  output RDY_get_to_console_get;

  // action method put_from_console_put
  input  [7 : 0] put_from_console_put;
  input  EN_put_from_console_put;
  output RDY_put_from_console_put;

  // value method intr
  output intr;

  // signals for module outputs
  wire [63 : 0] slave_rdata;
  wire [7 : 0] get_to_console_get;
  wire [6 : 0] slave_bid, slave_rid;
  wire [1 : 0] slave_bresp, slave_rresp;
  wire RDY_get_to_console_get,
       RDY_put_from_console_put,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_addr_map,
       intr,
       slave_arready,
       slave_awready,
       slave_bvalid,
       slave_rlast,
       slave_ruser,
       slave_rvalid,
       slave_wready;

  // inlined wires
  wire [99 : 0] slave_xactor_ug_slave_u_ar_putWire$wget,
		slave_xactor_ug_slave_u_aw_putWire$wget;
  wire [74 : 0] slave_xactor_ug_slave_u_r_peekWire$wget;
  wire [73 : 0] slave_xactor_ug_slave_u_w_putWire$wget;
  wire slave_xactor_ug_slave_u_ar_putWire$whas,
       slave_xactor_ug_slave_u_aw_putWire$whas,
       slave_xactor_ug_slave_u_b_dropWire$whas,
       slave_xactor_ug_slave_u_r_dropWire$whas,
       slave_xactor_ug_slave_u_w_putWire$whas;

  // register cfg_verbosity
  reg [7 : 0] cfg_verbosity;
  wire [7 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register rg_addr_base
  reg [63 : 0] rg_addr_base;
  wire [63 : 0] rg_addr_base$D_IN;
  wire rg_addr_base$EN;

  // register rg_addr_lim
  reg [63 : 0] rg_addr_lim;
  wire [63 : 0] rg_addr_lim$D_IN;
  wire rg_addr_lim$EN;

  // register rg_dll
  reg [7 : 0] rg_dll;
  wire [7 : 0] rg_dll$D_IN;
  wire rg_dll$EN;

  // register rg_dlm
  reg [7 : 0] rg_dlm;
  wire [7 : 0] rg_dlm$D_IN;
  wire rg_dlm$EN;

  // register rg_fcr
  reg [7 : 0] rg_fcr;
  wire [7 : 0] rg_fcr$D_IN;
  wire rg_fcr$EN;

  // register rg_ier
  reg [7 : 0] rg_ier;
  wire [7 : 0] rg_ier$D_IN;
  wire rg_ier$EN;

  // register rg_lcr
  reg [7 : 0] rg_lcr;
  wire [7 : 0] rg_lcr$D_IN;
  wire rg_lcr$EN;

  // register rg_lsr
  reg [7 : 0] rg_lsr;
  reg [7 : 0] rg_lsr$D_IN;
  wire rg_lsr$EN;

  // register rg_mcr
  reg [7 : 0] rg_mcr;
  wire [7 : 0] rg_mcr$D_IN;
  wire rg_mcr$EN;

  // register rg_msr
  reg [7 : 0] rg_msr;
  wire [7 : 0] rg_msr$D_IN;
  wire rg_msr$EN;

  // register rg_rbr
  reg [7 : 0] rg_rbr;
  wire [7 : 0] rg_rbr$D_IN;
  wire rg_rbr$EN;

  // register rg_scr
  reg [7 : 0] rg_scr;
  wire [7 : 0] rg_scr$D_IN;
  wire rg_scr$EN;

  // register rg_state
  reg rg_state;
  wire rg_state$D_IN, rg_state$EN;

  // register rg_thr
  reg [7 : 0] rg_thr;
  wire [7 : 0] rg_thr$D_IN;
  wire rg_thr$EN;

  // register slave_xactor_clearing
  reg slave_xactor_clearing;
  wire slave_xactor_clearing$D_IN, slave_xactor_clearing$EN;

  // ports of submodule f_from_console
  wire [7 : 0] f_from_console$D_IN, f_from_console$D_OUT;
  wire f_from_console$CLR,
       f_from_console$DEQ,
       f_from_console$EMPTY_N,
       f_from_console$ENQ,
       f_from_console$FULL_N;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule f_to_console
  wire [7 : 0] f_to_console$D_IN, f_to_console$D_OUT;
  wire f_to_console$CLR,
       f_to_console$DEQ,
       f_to_console$EMPTY_N,
       f_to_console$ENQ,
       f_to_console$FULL_N;

  // ports of submodule slave_xactor_shim_arff
  wire [99 : 0] slave_xactor_shim_arff$D_IN, slave_xactor_shim_arff$D_OUT;
  wire slave_xactor_shim_arff$CLR,
       slave_xactor_shim_arff$DEQ,
       slave_xactor_shim_arff$EMPTY_N,
       slave_xactor_shim_arff$ENQ,
       slave_xactor_shim_arff$FULL_N;

  // ports of submodule slave_xactor_shim_awff
  wire [99 : 0] slave_xactor_shim_awff$D_IN, slave_xactor_shim_awff$D_OUT;
  wire slave_xactor_shim_awff$CLR,
       slave_xactor_shim_awff$DEQ,
       slave_xactor_shim_awff$EMPTY_N,
       slave_xactor_shim_awff$ENQ,
       slave_xactor_shim_awff$FULL_N;

  // ports of submodule slave_xactor_shim_bff
  wire [8 : 0] slave_xactor_shim_bff$D_IN, slave_xactor_shim_bff$D_OUT;
  wire slave_xactor_shim_bff$CLR,
       slave_xactor_shim_bff$DEQ,
       slave_xactor_shim_bff$EMPTY_N,
       slave_xactor_shim_bff$ENQ,
       slave_xactor_shim_bff$FULL_N;

  // ports of submodule slave_xactor_shim_rff
  wire [73 : 0] slave_xactor_shim_rff$D_IN, slave_xactor_shim_rff$D_OUT;
  wire slave_xactor_shim_rff$CLR,
       slave_xactor_shim_rff$DEQ,
       slave_xactor_shim_rff$EMPTY_N,
       slave_xactor_shim_rff$ENQ,
       slave_xactor_shim_rff$FULL_N;

  // ports of submodule slave_xactor_shim_wff
  wire [72 : 0] slave_xactor_shim_wff$D_IN, slave_xactor_shim_wff$D_OUT;
  wire slave_xactor_shim_wff$CLR,
       slave_xactor_shim_wff$DEQ,
       slave_xactor_shim_wff$EMPTY_N,
       slave_xactor_shim_wff$ENQ,
       slave_xactor_shim_wff$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_process_rd_req,
       CAN_FIRE_RL_rl_process_wr_req,
       CAN_FIRE_RL_rl_receive,
       CAN_FIRE_RL_rl_reset,
       CAN_FIRE_RL_slave_xactor_do_clear,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut,
       CAN_FIRE_get_to_console_get,
       CAN_FIRE_put_from_console_put,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_addr_map,
       CAN_FIRE_slave_ar_arflit,
       CAN_FIRE_slave_aw_awflit,
       CAN_FIRE_slave_b_bready,
       CAN_FIRE_slave_r_rready,
       CAN_FIRE_slave_w_wflit,
       WILL_FIRE_RL_rl_process_rd_req,
       WILL_FIRE_RL_rl_process_wr_req,
       WILL_FIRE_RL_rl_receive,
       WILL_FIRE_RL_rl_reset,
       WILL_FIRE_RL_slave_xactor_do_clear,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_w_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut,
       WILL_FIRE_get_to_console_get,
       WILL_FIRE_put_from_console_put,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_addr_map,
       WILL_FIRE_slave_ar_arflit,
       WILL_FIRE_slave_aw_awflit,
       WILL_FIRE_slave_b_bready,
       WILL_FIRE_slave_r_rready,
       WILL_FIRE_slave_w_wflit;

  // inputs to muxes for submodule ports
  wire [7 : 0] MUX_rg_lsr$write_1__VAL_2;
  wire MUX_rg_lsr$write_1__SEL_2, MUX_slave_xactor_clearing$write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h3302;
  reg [31 : 0] v__h4259;
  reg [31 : 0] v__h3718;
  reg [31 : 0] v__h3532;
  reg [31 : 0] v__h4709;
  reg [31 : 0] v__h5053;
  reg [31 : 0] v__h6590;
  reg [31 : 0] v__h5451;
  reg [31 : 0] v__h5270;
  reg [31 : 0] v__h6932;
  reg [31 : 0] v__h7420;
  reg [31 : 0] v__h7530;
  reg [31 : 0] v__h3107;
  reg [31 : 0] v__h3101;
  reg [31 : 0] v__h3296;
  reg [31 : 0] v__h3526;
  reg [31 : 0] v__h3712;
  reg [31 : 0] v__h4253;
  reg [31 : 0] v__h4703;
  reg [31 : 0] v__h5047;
  reg [31 : 0] v__h5264;
  reg [31 : 0] v__h5445;
  reg [31 : 0] v__h6584;
  reg [31 : 0] v__h6926;
  reg [31 : 0] v__h7414;
  reg [31 : 0] v__h7524;
  // synopsys translate_on

  // remaining internal signals
  reg [63 : 0] x__h5628;
  reg [7 : 0] y_avValue_snd__h4452;
  wire [63 : 0] rdata___1__h4597,
		rdata__h4542,
		rdr_rdata__h4572,
		result__h5646,
		result__h5676,
		result__h5703,
		result__h5730,
		result__h5757,
		result__h5784,
		result__h5811,
		result__h5838,
		result__h5865,
		result__h5892,
		result__h5919,
		result__h5946,
		result__h5973,
		result__h6000,
		slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95,
		slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295;
  wire [7 : 0] fn_iir__h2760,
	       new_lsr__h7187,
	       x__h4600,
	       y_avValue_snd__h4465,
	       y_avValue_snd__h4478,
	       y_avValue_snd__h4493,
	       y_avValue_snd__h4507;
  wire [1 : 0] IF_slave_xactor_shim_arff_first__9_BITS_92_TO__ETC___d260,
	       IF_slave_xactor_shim_awff_first__89_BITS_92_TO_ETC___d614;
  wire NOT_cfg_verbosity_read__6_ULE_1_63___d264,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d108,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d145,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d150,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d155,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d160,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d165,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d170,
       NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d191,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d349,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d415,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d420,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d424,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d428,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d432,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d436,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d440,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d472,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d478,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d484,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d490,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d496,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d502,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d508,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d514,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d520,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d526,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d532,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d538,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d545,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d551,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d558,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d564,
       NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d580,
       slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62,
       slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64,
       slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291,
       slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292,
       slave_xactor_shim_bff_i_notFull__88_AND_slave__ETC___d311;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method set_addr_map
  assign RDY_set_addr_map = 1'd1 ;
  assign CAN_FIRE_set_addr_map = 1'd1 ;
  assign WILL_FIRE_set_addr_map = EN_set_addr_map ;

  // action method slave_aw_awflit
  assign CAN_FIRE_slave_aw_awflit = 1'd1 ;
  assign WILL_FIRE_slave_aw_awflit = slave_awvalid ;

  // value method slave_aw_awready
  assign slave_awready = slave_xactor_shim_awff$FULL_N ;

  // action method slave_w_wflit
  assign CAN_FIRE_slave_w_wflit = 1'd1 ;
  assign WILL_FIRE_slave_w_wflit = slave_wvalid ;

  // value method slave_w_wready
  assign slave_wready = slave_xactor_shim_wff$FULL_N ;

  // value method slave_b_bid
  assign slave_bid = slave_xactor_shim_bff$D_OUT[8:2] ;

  // value method slave_b_bresp
  assign slave_bresp = slave_xactor_shim_bff$D_OUT[1:0] ;

  // value method slave_b_bvalid
  assign slave_bvalid = slave_xactor_shim_bff$EMPTY_N ;

  // action method slave_b_bready
  assign CAN_FIRE_slave_b_bready = 1'd1 ;
  assign WILL_FIRE_slave_b_bready = 1'd1 ;

  // action method slave_ar_arflit
  assign CAN_FIRE_slave_ar_arflit = 1'd1 ;
  assign WILL_FIRE_slave_ar_arflit = slave_arvalid ;

  // value method slave_ar_arready
  assign slave_arready = slave_xactor_shim_arff$FULL_N ;

  // value method slave_r_rid
  assign slave_rid = slave_xactor_ug_slave_u_r_peekWire$wget[74:68] ;

  // value method slave_r_rdata
  assign slave_rdata = slave_xactor_ug_slave_u_r_peekWire$wget[67:4] ;

  // value method slave_r_rresp
  assign slave_rresp = slave_xactor_ug_slave_u_r_peekWire$wget[3:2] ;

  // value method slave_r_rlast
  assign slave_rlast = slave_xactor_ug_slave_u_r_peekWire$wget[1] ;

  // value method slave_r_ruser
  assign slave_ruser = slave_xactor_ug_slave_u_r_peekWire$wget[0] ;

  // value method slave_r_rvalid
  assign slave_rvalid = slave_xactor_shim_rff$EMPTY_N ;

  // action method slave_r_rready
  assign CAN_FIRE_slave_r_rready = 1'd1 ;
  assign WILL_FIRE_slave_r_rready = 1'd1 ;

  // actionvalue method get_to_console_get
  assign get_to_console_get = f_to_console$D_OUT ;
  assign RDY_get_to_console_get = f_to_console$EMPTY_N ;
  assign CAN_FIRE_get_to_console_get = f_to_console$EMPTY_N ;
  assign WILL_FIRE_get_to_console_get = EN_get_to_console_get ;

  // action method put_from_console_put
  assign RDY_put_from_console_put = f_from_console$FULL_N ;
  assign CAN_FIRE_put_from_console_put = f_from_console$FULL_N ;
  assign WILL_FIRE_put_from_console_put = EN_put_from_console_put ;

  // value method intr
  assign intr = !fn_iir__h2760[0] ;

  // submodule f_from_console
  FIFO2 #(.width(32'd8), .guarded(32'd1)) f_from_console(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(f_from_console$D_IN),
							 .ENQ(f_from_console$ENQ),
							 .DEQ(f_from_console$DEQ),
							 .CLR(f_from_console$CLR),
							 .D_OUT(f_from_console$D_OUT),
							 .FULL_N(f_from_console$FULL_N),
							 .EMPTY_N(f_from_console$EMPTY_N));

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule f_to_console
  FIFO2 #(.width(32'd8), .guarded(32'd1)) f_to_console(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(f_to_console$D_IN),
						       .ENQ(f_to_console$ENQ),
						       .DEQ(f_to_console$DEQ),
						       .CLR(f_to_console$CLR),
						       .D_OUT(f_to_console$D_OUT),
						       .FULL_N(f_to_console$FULL_N),
						       .EMPTY_N(f_to_console$EMPTY_N));

  // submodule slave_xactor_shim_arff
  SizedFIFO #(.p1width(32'd100),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_arff(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(slave_xactor_shim_arff$D_IN),
						      .ENQ(slave_xactor_shim_arff$ENQ),
						      .DEQ(slave_xactor_shim_arff$DEQ),
						      .CLR(slave_xactor_shim_arff$CLR),
						      .D_OUT(slave_xactor_shim_arff$D_OUT),
						      .FULL_N(slave_xactor_shim_arff$FULL_N),
						      .EMPTY_N(slave_xactor_shim_arff$EMPTY_N));

  // submodule slave_xactor_shim_awff
  SizedFIFO #(.p1width(32'd100),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_awff(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(slave_xactor_shim_awff$D_IN),
						      .ENQ(slave_xactor_shim_awff$ENQ),
						      .DEQ(slave_xactor_shim_awff$DEQ),
						      .CLR(slave_xactor_shim_awff$CLR),
						      .D_OUT(slave_xactor_shim_awff$D_OUT),
						      .FULL_N(slave_xactor_shim_awff$FULL_N),
						      .EMPTY_N(slave_xactor_shim_awff$EMPTY_N));

  // submodule slave_xactor_shim_bff
  SizedFIFO #(.p1width(32'd9),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_bff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_bff$D_IN),
						     .ENQ(slave_xactor_shim_bff$ENQ),
						     .DEQ(slave_xactor_shim_bff$DEQ),
						     .CLR(slave_xactor_shim_bff$CLR),
						     .D_OUT(slave_xactor_shim_bff$D_OUT),
						     .FULL_N(slave_xactor_shim_bff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_bff$EMPTY_N));

  // submodule slave_xactor_shim_rff
  SizedFIFO #(.p1width(32'd74),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_rff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_rff$D_IN),
						     .ENQ(slave_xactor_shim_rff$ENQ),
						     .DEQ(slave_xactor_shim_rff$DEQ),
						     .CLR(slave_xactor_shim_rff$CLR),
						     .D_OUT(slave_xactor_shim_rff$D_OUT),
						     .FULL_N(slave_xactor_shim_rff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_rff$EMPTY_N));

  // submodule slave_xactor_shim_wff
  SizedFIFO #(.p1width(32'd73),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_wff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_wff$D_IN),
						     .ENQ(slave_xactor_shim_wff$ENQ),
						     .DEQ(slave_xactor_shim_wff$DEQ),
						     .CLR(slave_xactor_shim_wff$CLR),
						     .D_OUT(slave_xactor_shim_wff$D_OUT),
						     .FULL_N(slave_xactor_shim_wff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_wff$EMPTY_N));

  // rule RL_rl_receive
  assign CAN_FIRE_RL_rl_receive = f_from_console$EMPTY_N && !rg_lsr[0] ;
  assign WILL_FIRE_RL_rl_receive = CAN_FIRE_RL_rl_receive ;

  // rule RL_slave_xactor_ug_slave_u_aw_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut =
	     slave_xactor_ug_slave_u_aw_putWire$whas &&
	     !slave_xactor_shim_awff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_w_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut =
	     slave_xactor_ug_slave_u_w_putWire$whas &&
	     !slave_xactor_shim_wff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_b_setPeek
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek =
	     slave_xactor_shim_bff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek =
	     slave_xactor_shim_bff$EMPTY_N ;

  // rule RL_slave_xactor_ug_slave_u_b_warnDoDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop =
	     slave_xactor_ug_slave_u_b_dropWire$whas &&
	     !slave_xactor_shim_bff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop ;

  // rule RL_slave_xactor_ug_slave_u_b_doDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop =
	     slave_xactor_shim_bff$EMPTY_N &&
	     slave_xactor_ug_slave_u_b_dropWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop ;

  // rule RL_slave_xactor_ug_slave_u_ar_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut =
	     slave_xactor_ug_slave_u_ar_putWire$whas &&
	     !slave_xactor_shim_arff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_r_setPeek
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek =
	     slave_xactor_shim_rff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek =
	     slave_xactor_shim_rff$EMPTY_N ;

  // rule RL_slave_xactor_ug_slave_u_r_warnDoDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop =
	     slave_xactor_ug_slave_u_r_dropWire$whas &&
	     !slave_xactor_shim_rff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop ;

  // rule RL_slave_xactor_ug_slave_u_r_doDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop =
	     slave_xactor_shim_rff$EMPTY_N &&
	     slave_xactor_ug_slave_u_r_dropWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop ;

  // rule RL_rl_process_rd_req
  assign CAN_FIRE_RL_rl_process_rd_req =
	     !slave_xactor_clearing && slave_xactor_shim_arff$EMPTY_N &&
	     slave_xactor_shim_rff$FULL_N &&
	     rg_state ;
  assign WILL_FIRE_RL_rl_process_rd_req =
	     CAN_FIRE_RL_rl_process_rd_req && !WILL_FIRE_RL_rl_receive ;

  // rule RL_rl_process_wr_req
  assign CAN_FIRE_RL_rl_process_wr_req =
	     !slave_xactor_clearing && slave_xactor_shim_awff$EMPTY_N &&
	     slave_xactor_shim_wff$EMPTY_N &&
	     slave_xactor_shim_bff_i_notFull__88_AND_slave__ETC___d311 &&
	     rg_state ;
  assign WILL_FIRE_RL_rl_process_wr_req = CAN_FIRE_RL_rl_process_wr_req ;

  // rule RL_rl_reset
  assign CAN_FIRE_RL_rl_reset = MUX_slave_xactor_clearing$write_1__SEL_2 ;
  assign WILL_FIRE_RL_rl_reset = MUX_slave_xactor_clearing$write_1__SEL_2 ;

  // rule RL_slave_xactor_ug_slave_u_aw_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut =
	     slave_xactor_shim_awff$FULL_N &&
	     slave_xactor_ug_slave_u_aw_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut ;

  // rule RL_slave_xactor_ug_slave_u_ar_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut =
	     slave_xactor_shim_arff$FULL_N &&
	     slave_xactor_ug_slave_u_ar_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut ;

  // rule RL_slave_xactor_ug_slave_u_w_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut =
	     slave_xactor_shim_wff$FULL_N &&
	     slave_xactor_ug_slave_u_w_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_w_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut ;

  // rule RL_slave_xactor_do_clear
  assign CAN_FIRE_RL_slave_xactor_do_clear = slave_xactor_clearing ;
  assign WILL_FIRE_RL_slave_xactor_do_clear = slave_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_rg_lsr$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_process_rd_req &&
	     NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d108 ;
  assign MUX_slave_xactor_clearing$write_1__SEL_2 =
	     !slave_xactor_clearing && f_reset_reqs$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign MUX_rg_lsr$write_1__VAL_2 = { rg_lsr[7:1], 1'd0 } ;

  // inlined wires
  assign slave_xactor_ug_slave_u_aw_putWire$wget =
	     { slave_awid,
	       slave_awaddr,
	       slave_awlen,
	       slave_awsize,
	       slave_awburst,
	       slave_awlock,
	       slave_awcache,
	       slave_awprot,
	       slave_awqos,
	       slave_awregion } ;
  assign slave_xactor_ug_slave_u_aw_putWire$whas =
	     slave_awvalid && slave_xactor_shim_awff$FULL_N ;
  assign slave_xactor_ug_slave_u_w_putWire$wget =
	     { slave_wdata, slave_wstrb, slave_wlast, slave_wuser } ;
  assign slave_xactor_ug_slave_u_w_putWire$whas =
	     slave_wvalid && slave_xactor_shim_wff$FULL_N ;
  assign slave_xactor_ug_slave_u_ar_putWire$wget =
	     { slave_arid,
	       slave_araddr,
	       slave_arlen,
	       slave_arsize,
	       slave_arburst,
	       slave_arlock,
	       slave_arcache,
	       slave_arprot,
	       slave_arqos,
	       slave_arregion } ;
  assign slave_xactor_ug_slave_u_ar_putWire$whas =
	     slave_arvalid && slave_xactor_shim_arff$FULL_N ;
  assign slave_xactor_ug_slave_u_r_peekWire$wget =
	     { slave_xactor_shim_rff$D_OUT, 1'd0 } ;
  assign slave_xactor_ug_slave_u_b_dropWire$whas =
	     slave_xactor_shim_bff$EMPTY_N && slave_bready ;
  assign slave_xactor_ug_slave_u_r_dropWire$whas =
	     slave_xactor_shim_rff$EMPTY_N && slave_rready ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = 8'h0 ;
  assign cfg_verbosity$EN = 1'b0 ;

  // register rg_addr_base
  assign rg_addr_base$D_IN = set_addr_map_addr_base ;
  assign rg_addr_base$EN = EN_set_addr_map ;

  // register rg_addr_lim
  assign rg_addr_lim$D_IN = set_addr_map_addr_lim ;
  assign rg_addr_lim$EN = EN_set_addr_map ;

  // register rg_dll
  assign rg_dll$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_dll$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d415 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_dlm
  assign rg_dlm$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_dlm$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d424 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_fcr
  assign rg_fcr$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_fcr$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d428 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_ier
  assign rg_ier$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_ier$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d420 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_lcr
  assign rg_lcr$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_lcr$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d432 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_lsr
  always@(WILL_FIRE_RL_rl_reset or
	  MUX_rg_lsr$write_1__SEL_2 or
	  MUX_rg_lsr$write_1__VAL_2 or
	  WILL_FIRE_RL_rl_receive or new_lsr__h7187)
  case (1'b1)
    WILL_FIRE_RL_rl_reset: rg_lsr$D_IN = 8'd96;
    MUX_rg_lsr$write_1__SEL_2: rg_lsr$D_IN = MUX_rg_lsr$write_1__VAL_2;
    WILL_FIRE_RL_rl_receive: rg_lsr$D_IN = new_lsr__h7187;
    default: rg_lsr$D_IN = 8'b10101010 /* unspecified value */ ;
  endcase
  assign rg_lsr$EN =
	     WILL_FIRE_RL_rl_process_rd_req &&
	     NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d108 ||
	     WILL_FIRE_RL_rl_receive ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_mcr
  assign rg_mcr$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_mcr$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d436 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_msr
  assign rg_msr$D_IN = 8'd0 ;
  assign rg_msr$EN = MUX_slave_xactor_clearing$write_1__SEL_2 ;

  // register rg_rbr
  assign rg_rbr$D_IN = f_from_console$D_OUT ;
  assign rg_rbr$EN = CAN_FIRE_RL_rl_receive ;

  // register rg_scr
  assign rg_scr$D_IN = WILL_FIRE_RL_rl_reset ? 8'd0 : x__h5628[7:0] ;
  assign rg_scr$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d440 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_state
  assign rg_state$D_IN = 1'd1 ;
  assign rg_state$EN = MUX_slave_xactor_clearing$write_1__SEL_2 ;

  // register rg_thr
  assign rg_thr$D_IN = x__h5628[7:0] ;
  assign rg_thr$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d349 ;

  // register slave_xactor_clearing
  assign slave_xactor_clearing$D_IN = !slave_xactor_clearing ;
  assign slave_xactor_clearing$EN =
	     slave_xactor_clearing || WILL_FIRE_RL_rl_reset ;

  // submodule f_from_console
  assign f_from_console$D_IN = put_from_console_put ;
  assign f_from_console$ENQ = EN_put_from_console_put ;
  assign f_from_console$DEQ = CAN_FIRE_RL_rl_receive ;
  assign f_from_console$CLR = 1'b0 ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_server_reset_request_put ;
  assign f_reset_reqs$DEQ = MUX_slave_xactor_clearing$write_1__SEL_2 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = MUX_slave_xactor_clearing$write_1__SEL_2 ;
  assign f_reset_rsps$DEQ = EN_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule f_to_console
  assign f_to_console$D_IN = x__h5628[7:0] ;
  assign f_to_console$ENQ =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d349 ;
  assign f_to_console$DEQ = EN_get_to_console_get ;
  assign f_to_console$CLR = 1'b0 ;

  // submodule slave_xactor_shim_arff
  assign slave_xactor_shim_arff$D_IN =
	     slave_xactor_ug_slave_u_ar_putWire$wget ;
  assign slave_xactor_shim_arff$ENQ =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut ;
  assign slave_xactor_shim_arff$DEQ = WILL_FIRE_RL_rl_process_rd_req ;
  assign slave_xactor_shim_arff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_awff
  assign slave_xactor_shim_awff$D_IN =
	     slave_xactor_ug_slave_u_aw_putWire$wget ;
  assign slave_xactor_shim_awff$ENQ =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut ;
  assign slave_xactor_shim_awff$DEQ = CAN_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_awff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_bff
  assign slave_xactor_shim_bff$D_IN =
	     { slave_xactor_shim_awff$D_OUT[99:93],
	       IF_slave_xactor_shim_awff_first__89_BITS_92_TO_ETC___d614 } ;
  assign slave_xactor_shim_bff$ENQ = CAN_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_bff$DEQ =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop ;
  assign slave_xactor_shim_bff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_rff
  assign slave_xactor_shim_rff$D_IN =
	     { slave_xactor_shim_arff$D_OUT[99:93],
	       rdr_rdata__h4572,
	       IF_slave_xactor_shim_arff_first__9_BITS_92_TO__ETC___d260,
	       1'd1 } ;
  assign slave_xactor_shim_rff$ENQ = WILL_FIRE_RL_rl_process_rd_req ;
  assign slave_xactor_shim_rff$DEQ =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop ;
  assign slave_xactor_shim_rff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_wff
  assign slave_xactor_shim_wff$D_IN =
	     slave_xactor_ug_slave_u_w_putWire$wget[73:1] ;
  assign slave_xactor_shim_wff$ENQ =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut ;
  assign slave_xactor_shim_wff$DEQ = CAN_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_wff$CLR = slave_xactor_clearing ;

  // remaining internal signals
  assign IF_slave_xactor_shim_arff_first__9_BITS_92_TO__ETC___d260 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	      !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) ?
	       2'd3 :
	       ((slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
		 2'd0) ?
		  ((slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
		    59'd0) ?
		     2'd0 :
		     2'd3) :
		  2'd2) ;
  assign IF_slave_xactor_shim_awff_first__89_BITS_92_TO_ETC___d614 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	      !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) ?
	       2'd3 :
	       ((slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
		 2'd0) ?
		  ((slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
		    59'd0) ?
		     2'd0 :
		     2'd3) :
		  2'd2) ;
  assign NOT_cfg_verbosity_read__6_ULE_1_63___d264 = cfg_verbosity > 8'd1 ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d108 =
	     !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] ==
	     3'h0 &&
	     !rg_lcr[7] ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d145 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_arff$D_OUT[17:16] == 2'd0 ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d150 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_arff$D_OUT[17:16] == 2'd1 ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d155 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_arff$D_OUT[17:16] == 2'd2 ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d160 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd2 ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d165 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_arff$D_OUT[15] ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d170 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	     3'h7 &&
	     !slave_xactor_shim_arff$D_OUT[15] ;
  assign NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d191 =
	     !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	     59'd0 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd2 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d349 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h0 &&
	     !rg_lcr[7] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d415 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h0 &&
	     rg_lcr[7] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d420 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h1 &&
	     !rg_lcr[7] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d424 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h1 &&
	     rg_lcr[7] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d428 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h2 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d432 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h3 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d436 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h4 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d440 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] ==
	     3'h7 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d472 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_awff$D_OUT[17:16] == 2'd0 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d478 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d472 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d484 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_awff$D_OUT[17:16] == 2'd1 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d490 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d484 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d496 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_awff$D_OUT[17:16] == 2'd2 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d502 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d496 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d508 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd2 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d514 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d508 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d520 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_awff$D_OUT[15] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d526 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d520 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d532 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     !slave_xactor_shim_awff$D_OUT[15] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d538 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d532 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d545 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     slave_xactor_shim_wff$D_OUT[0] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d551 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d545 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d558 =
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      !rg_lcr[7]) &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h2 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h3 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h4 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h5 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h6 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	     3'h7 &&
	     !slave_xactor_shim_wff$D_OUT[0] ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d564 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	     59'd0 &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      !rg_lcr[7]) &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h1 ||
	      rg_lcr[7]) &&
	     NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d558 ;
  assign NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d580 =
	     !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	     2'd0 &&
	     slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	     59'd0 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd2 ;
  assign fn_iir__h2760 =
	     (rg_ier[0] && rg_lsr[0]) ? 8'h04 : (rg_ier[1] ? 8'h02 : 8'd0) ;
  assign new_lsr__h7187 = { rg_lsr[7:1], 1'd1 } ;
  assign rdata___1__h4597 = { 24'd0, x__h4600, 32'd0 } ;
  assign rdata__h4542 = { 56'd0, x__h4600 } ;
  assign rdr_rdata__h4572 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[2:0] ==
	      3'b100) ?
	       rdata___1__h4597 :
	       rdata__h4542 ;
  assign result__h5646 = { 56'd0, slave_xactor_shim_wff$D_OUT[16:9] } ;
  assign result__h5676 = { 56'd0, slave_xactor_shim_wff$D_OUT[24:17] } ;
  assign result__h5703 = { 56'd0, slave_xactor_shim_wff$D_OUT[32:25] } ;
  assign result__h5730 = { 56'd0, slave_xactor_shim_wff$D_OUT[40:33] } ;
  assign result__h5757 = { 56'd0, slave_xactor_shim_wff$D_OUT[48:41] } ;
  assign result__h5784 = { 56'd0, slave_xactor_shim_wff$D_OUT[56:49] } ;
  assign result__h5811 = { 56'd0, slave_xactor_shim_wff$D_OUT[64:57] } ;
  assign result__h5838 = { 56'd0, slave_xactor_shim_wff$D_OUT[72:65] } ;
  assign result__h5865 = { 48'd0, slave_xactor_shim_wff$D_OUT[24:9] } ;
  assign result__h5892 = { 48'd0, slave_xactor_shim_wff$D_OUT[40:25] } ;
  assign result__h5919 = { 48'd0, slave_xactor_shim_wff$D_OUT[56:41] } ;
  assign result__h5946 = { 48'd0, slave_xactor_shim_wff$D_OUT[72:57] } ;
  assign result__h5973 = { 32'd0, slave_xactor_shim_wff$D_OUT[40:9] } ;
  assign result__h6000 = { 32'd0, slave_xactor_shim_wff$D_OUT[72:41] } ;
  assign slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 =
	     slave_xactor_shim_arff$D_OUT[92:29] < rg_addr_base ;
  assign slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 =
	     slave_xactor_shim_arff$D_OUT[92:29] < rg_addr_lim ;
  assign slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95 =
	     slave_xactor_shim_arff$D_OUT[92:29] - rg_addr_base ;
  assign slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 =
	     slave_xactor_shim_awff$D_OUT[92:29] < rg_addr_base ;
  assign slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 =
	     slave_xactor_shim_awff$D_OUT[92:29] < rg_addr_lim ;
  assign slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295 =
	     slave_xactor_shim_awff$D_OUT[92:29] - rg_addr_base ;
  assign slave_xactor_shim_bff_i_notFull__88_AND_slave__ETC___d311 =
	     slave_xactor_shim_bff$FULL_N &&
	     (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	      !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 ||
	      slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	      2'd0 ||
	      slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	      59'd0 ||
	      slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[4:2] !=
	      3'h0 ||
	      rg_lcr[7] ||
	      f_to_console$FULL_N) ;
  assign x__h4600 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	      !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 ||
	      slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	      2'd0 ||
	      slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	      59'd0) ?
	       8'd0 :
	       y_avValue_snd__h4507 ;
  assign y_avValue_snd__h4465 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] ==
	      3'h1 &&
	      rg_lcr[7]) ?
	       rg_dlm :
	       y_avValue_snd__h4452 ;
  assign y_avValue_snd__h4478 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] ==
	      3'h1 &&
	      !rg_lcr[7]) ?
	       rg_ier :
	       y_avValue_snd__h4465 ;
  assign y_avValue_snd__h4493 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] ==
	      3'h0 &&
	      rg_lcr[7]) ?
	       rg_dll :
	       y_avValue_snd__h4478 ;
  assign y_avValue_snd__h4507 =
	     (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] ==
	      3'h0 &&
	      !rg_lcr[7]) ?
	       rg_rbr :
	       y_avValue_snd__h4493 ;
  always@(slave_xactor_shim_wff$D_OUT or
	  result__h5646 or
	  result__h5676 or
	  result__h5865 or
	  result__h5703 or
	  result__h5730 or
	  result__h5892 or
	  result__h5973 or
	  result__h5757 or
	  result__h5784 or
	  result__h5919 or
	  result__h5811 or result__h5838 or result__h5946 or result__h6000)
  begin
    case (slave_xactor_shim_wff$D_OUT[8:1])
      8'b00000001: x__h5628 = result__h5646;
      8'b00000010: x__h5628 = result__h5676;
      8'b00000011: x__h5628 = result__h5865;
      8'b00000100: x__h5628 = result__h5703;
      8'b00001000: x__h5628 = result__h5730;
      8'b00001100: x__h5628 = result__h5892;
      8'b00001111: x__h5628 = result__h5973;
      8'b00010000: x__h5628 = result__h5757;
      8'b00100000: x__h5628 = result__h5784;
      8'b00110000: x__h5628 = result__h5919;
      8'b01000000: x__h5628 = result__h5811;
      8'b10000000: x__h5628 = result__h5838;
      8'b11000000: x__h5628 = result__h5946;
      8'b11110000: x__h5628 = result__h6000;
      8'b11111111: x__h5628 = slave_xactor_shim_wff$D_OUT[72:9];
      default: x__h5628 = 64'd0;
    endcase
  end
  always@(slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95 or
	  fn_iir__h2760 or rg_lcr or rg_mcr or rg_lsr or rg_msr or rg_scr)
  begin
    case (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2])
      3'h2: y_avValue_snd__h4452 = fn_iir__h2760;
      3'h3: y_avValue_snd__h4452 = rg_lcr;
      3'h4: y_avValue_snd__h4452 = rg_mcr;
      3'h5: y_avValue_snd__h4452 = rg_lsr;
      3'h6: y_avValue_snd__h4452 = rg_msr;
      3'h7: y_avValue_snd__h4452 = rg_scr;
      default: y_avValue_snd__h4452 = 8'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_dll <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_dlm <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_fcr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_ier <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_lcr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_lsr <= `BSV_ASSIGNMENT_DELAY 8'd96;
	rg_mcr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_msr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_scr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
	slave_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (rg_dll$EN) rg_dll <= `BSV_ASSIGNMENT_DELAY rg_dll$D_IN;
	if (rg_dlm$EN) rg_dlm <= `BSV_ASSIGNMENT_DELAY rg_dlm$D_IN;
	if (rg_fcr$EN) rg_fcr <= `BSV_ASSIGNMENT_DELAY rg_fcr$D_IN;
	if (rg_ier$EN) rg_ier <= `BSV_ASSIGNMENT_DELAY rg_ier$D_IN;
	if (rg_lcr$EN) rg_lcr <= `BSV_ASSIGNMENT_DELAY rg_lcr$D_IN;
	if (rg_lsr$EN) rg_lsr <= `BSV_ASSIGNMENT_DELAY rg_lsr$D_IN;
	if (rg_mcr$EN) rg_mcr <= `BSV_ASSIGNMENT_DELAY rg_mcr$D_IN;
	if (rg_msr$EN) rg_msr <= `BSV_ASSIGNMENT_DELAY rg_msr$D_IN;
	if (rg_scr$EN) rg_scr <= `BSV_ASSIGNMENT_DELAY rg_scr$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (slave_xactor_clearing$EN)
	  slave_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_clearing$D_IN;
      end
    if (rg_addr_base$EN)
      rg_addr_base <= `BSV_ASSIGNMENT_DELAY rg_addr_base$D_IN;
    if (rg_addr_lim$EN) rg_addr_lim <= `BSV_ASSIGNMENT_DELAY rg_addr_lim$D_IN;
    if (rg_rbr$EN) rg_rbr <= `BSV_ASSIGNMENT_DELAY rg_rbr$D_IN;
    if (rg_thr$EN) rg_thr <= `BSV_ASSIGNMENT_DELAY rg_thr$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 8'hAA;
    rg_addr_base = 64'hAAAAAAAAAAAAAAAA;
    rg_addr_lim = 64'hAAAAAAAAAAAAAAAA;
    rg_dll = 8'hAA;
    rg_dlm = 8'hAA;
    rg_fcr = 8'hAA;
    rg_ier = 8'hAA;
    rg_lcr = 8'hAA;
    rg_lsr = 8'hAA;
    rg_mcr = 8'hAA;
    rg_msr = 8'hAA;
    rg_rbr = 8'hAA;
    rg_scr = 8'hAA;
    rg_state = 1'h0;
    rg_thr = 8'hAA;
    slave_xactor_clearing = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_receive &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$display("UART_Model.rl_receive: received char 0x%0h; new_lsr = 0x%0h",
		 f_from_console$D_OUT,
		 new_lsr__h7187);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	begin
	  v__h3302 = $stime;
	  #0;
	end
    v__h3296 = v__h3302 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$display("%0d: %m.rl_process_rd_req: ERROR: UART addr out of bounds",
		 v__h3296);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$display("    UART base addr 0x%0h  limit addr 0x%0h",
		 rg_addr_base,
		 rg_addr_lim);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("    AXI4 request: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64) &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	begin
	  v__h4259 = $stime;
	  #0;
	end
    v__h4253 = v__h4259 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$display("%0d: %m.rl_process_rd_req: ERROR: UART unsupported addr",
		 v__h4253);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d145)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d150)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d155)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d160)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d165)
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[4:2] !=
	   3'h0 ||
	   rg_lcr[7]) &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d170)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	begin
	  v__h3718 = $stime;
	  #0;
	end
    v__h3712 = v__h3718 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$display("%0d: %m.rl_process_rd_req: ERROR: UART unsupported addr",
		 v__h3712);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_slave_xactor_shim_arff_first__9_BITS_92_TO_ETC___d191)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	  59'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	begin
	  v__h3532 = $stime;
	  #0;
	end
    v__h3526 = v__h3532 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$display("%0d: %m.rl_process_rd_req: ERROR: UART misaligned addr",
		 v__h3526);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	begin
	  v__h4709 = $stime;
	  #0;
	end
    v__h4703 = v__h4709 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$display("%0d: %m.rl_process_rd_req", v__h4703);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", rdr_rdata__h4572);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] ==
	  59'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 &&
	  slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	  2'd0)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 ||
	   slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] !=
	   2'd0 ||
	   slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[63:5] !=
	   59'd0) &&
	  (slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d62 ||
	   !slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d64 ||
	   slave_xactor_shim_arff_first__9_BITS_92_TO_29__ETC___d95[1:0] ==
	   2'd0))
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	begin
	  v__h5053 = $stime;
	  #0;
	end
    v__h5047 = v__h5053 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$display("%0d: %m.rl_process_rd_req: ERROR: UART addr out of bounds",
		 v__h5047);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$display("    UART base addr 0x%0h  limit addr 0x%0h",
		 rg_addr_base,
		 rg_addr_lim);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("    AXI4 request: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292) &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	begin
	  v__h6590 = $stime;
	  #0;
	end
    v__h6584 = v__h6590 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$display("%0d: %m.rl_process_wr_req: ERROR: UART unsupported addr",
		 v__h6584);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d478)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d490)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d502)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d514)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d526)
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d538)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d551)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d564)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  1'b0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	begin
	  v__h5451 = $stime;
	  #0;
	end
    v__h5445 = v__h5451 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$display("%0d: %m.rl_process_wr_req: ERROR: UART unsupported addr",
		 v__h5445);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_slave_xactor_shim_awff_first__89_BITS_92_T_ETC___d580)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	  59'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	begin
	  v__h5270 = $stime;
	  #0;
	end
    v__h5264 = v__h5270 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$display("%0d: %m.rl_process_wr_req: ERROR: UART misaligned addr",
		 v__h5264);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	begin
	  v__h6932 = $stime;
	  #0;
	end
    v__h6926 = v__h6932 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$display("%0d: %m.rl_process_wr_req", v__h6926);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  slave_xactor_shim_wff$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_wff$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[99:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	  2'd0 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] ==
	  59'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 &&
	  slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	  2'd0)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264 &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 ||
	   slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] !=
	   2'd0 ||
	   slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[63:5] !=
	   59'd0) &&
	  (slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d291 ||
	   !slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d292 ||
	   slave_xactor_shim_awff_first__89_BITS_92_TO_29_ETC___d295[1:0] ==
	   2'd0))
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__6_ULE_1_63___d264)
	$write("\n");
    if (EN_set_addr_map && set_addr_map_addr_base[2:0] != 3'd0)
      begin
        v__h7420 = $stime;
	#0;
      end
    v__h7414 = v__h7420 / 32'd10;
    if (EN_set_addr_map && set_addr_map_addr_base[2:0] != 3'd0)
      $display("%0d: WARNING: UART.set_addr_map: addr_base 0x%0h is not 8-Byte-aligned",
	       v__h7414,
	       set_addr_map_addr_base);
    if (EN_set_addr_map && set_addr_map_addr_lim[2:0] != 3'd0)
      begin
        v__h7530 = $stime;
	#0;
      end
    v__h7524 = v__h7530 / 32'd10;
    if (EN_set_addr_map && set_addr_map_addr_lim[2:0] != 3'd0)
      $display("%0d: WARNING: UART.set_addr_map: addr_lim 0x%0h is not 8-Byte-aligned",
	       v__h7524,
	       set_addr_map_addr_lim);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 8'd0)
	begin
	  v__h3107 = $stime;
	  #0;
	end
    v__h3101 = v__h3107 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 8'd0)
	$display("%0d: UART.rl_reset", v__h3101);
  end
  // synopsys translate_on
endmodule  // mkUART

